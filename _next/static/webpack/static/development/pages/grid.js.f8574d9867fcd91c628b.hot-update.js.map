{"version":3,"file":"static/webpack/static/development/pages/grid.js.f8574d9867fcd91c628b.hot-update.js","sources":["webpack:///./pages/grid.tsx"],"sourcesContent":["import * as React from 'react';\nimport Layout from '../layouts/main';\nimport { NextPage } from 'next';\n\nimport DemoForm from '../components/DemoForm';\n\nconst code = `const { get } = Lodash\nconst { Col, Row } = ReactGridSystem;\n\nconst ColMw = (props) => {\n  const { extraProps, parent, next } = props;\n  if (!parent) return next(props);\n  return (\n    <Col xs=\"12\" {...get(extraProps, 'col')}>\n      {next(props)}\n    </Col>\n  );\n};\n\nconst RowMw = (props) => {\n  const { schema, extraProps, next } = props;\n  if (typeof schema === 'object' && (schema.type === 'object' || schema.type === 'array'))\n    return <Row {...get(extraProps, 'row')}>{next(props)}</Row>;\n  return next(props);\n};\n\nconst schema = {\n  type: 'object',\n  title: 'Grid Demo',\n  properties: {\n    input1: { type: 'string' },\n    input2: { type: 'string' },\n    input3: { type: 'string' },\n    input4: { type: 'string' },\n    input5: { type: 'string' },\n    object1: {\n      type: 'object',\n      title: 'object-1',\n      properties: {\n        o1_i1: { type: 'string' },\n        o1_i2: { type: 'string' },\n      },\n    },\n    object2: {\n      title: 'object-2',\n      type: 'object',\n      properties: {\n        o2_i1: { type: 'string' },\n        o2_i2: { type: 'string' },\n      },\n    },\n  },\n};\n\nconst extraProps = {\n  properties: {\n    input1: { col: { xs: 6 } },\n    input2: { col: { xs: 6 } },\n    input3: { col: { xs: 4 } },\n    input4: { col: { xs: 4 } },\n    input5: { col: { xs: 4 } },\n    object1: { col: { xs: 6 } },\n    object2: {\n      col: { xs: 6 },\n      properties: {\n        o2_i1: { col: { xs: 6 } },\n        o2_i2: { col: { xs: 6 } },\n      },\n    },\n  },\n};\n\nconst middlewares = [\n  ExtraPropsMw,\n  ColMw,\n  FieldsetTemplateMw,\n  RowMw,\n  FormGroupTemplateMw,\n  ...schemaMws,\n  InputMw,\n  NotSupportedMw,\n];\n\nrender(\n  <Form\n    schema={schema}\n    extraProps={extraProps}\n    middlewares={middlewares}\n  />\n);\n`;\n\nconst IndexPage: NextPage = () => {\n  return (\n    <Layout>\n      <DemoForm code={code} />\n    </Layout>\n  );\n};\n\nexport default IndexPage;\n"],"mappings":";;;;;;;;;;;;;;;;;;;AAAA;AACA;AAGA;AAEA;AACA;AAqFA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AACA;AACA;;;;A","sourceRoot":""}