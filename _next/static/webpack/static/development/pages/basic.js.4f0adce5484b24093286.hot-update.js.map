{"version":3,"file":"static/webpack/static/development/pages/basic.js.4f0adce5484b24093286.hot-update.js","sources":["webpack:///./src/middlewares/FormGroupTemplateMw.tsx"],"sourcesContent":["import * as React from 'react';\nimport { toJSONSchemaPath, isRequired } from '../core';\nimport { BlueprintFormMiddlewareProps } from '../share';\nimport { FormGroup, Intent } from '@blueprintjs/core';\n\nexport const FormGroupTemplateBaseMw: React.ComponentType<BlueprintFormMiddlewareProps> = (props) => {\n  const { schema, dataPath, next, errors } = props;\n\n  if (typeof schema === 'boolean') return next(props);\n\n  const id = toJSONSchemaPath(dataPath);\n  const error = errors && errors.find(({ dataPath }) => dataPath === id);\n\n  return (\n    <FormGroup\n      label={schema.title || dataPath[dataPath.length - 1]}\n      helperText={error ? error.message : schema.description}\n      labelInfo={isRequired(props) ? '(required)' : ''}\n      intent={Intent.DANGER}\n    >\n      {next(props)}\n    </FormGroup>\n  );\n};\n\nexport const FormGroupTemplateMw: React.ComponentType<BlueprintFormMiddlewareProps> = (props) => {\n  const { schema, parent, next } = props;\n  if (\n    typeof schema === 'boolean' ||\n    schema.type === 'object' ||\n    schema.type === 'array' ||\n    (parent && typeof parent.schema !== 'boolean' && parent.schema.type === 'array')\n  )\n    return next(props);\n\n  return <FormGroupTemplateBaseMw {...props} />;\n};\n\nexport default FormGroupTemplateMw;\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AAEA;AAEA;AAAA;AAAA;AAAA;AAAA;AAGA;AAEA;AACA;AAAA;AAAA;AAAA;AAEA;AAEA;AACA;AACA;AACA;AAJA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AASA;AAEA;AAAA;AAAA;AAAA;AAEA;AAQA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAEA;;;;A","sourceRoot":""}